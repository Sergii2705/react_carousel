{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","ids","Array","props","images","length","fill","map","el","uuidv4","state","step","frameSize","itemWidth","animationDuration","isInfinite","marginLeft","isDisablePrev","isDisableNext","moveTo","way","minMarginLeft","setState","prevState","this","className","style","width","type","value","min","max","onChange","event","target","checked","transition","image","index","src","alt","disabled","onClick","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7e76319.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n}\n\ninterface State {\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  isInfinite: boolean,\n  marginLeft: number,\n  isDisablePrev: boolean;\n  isDisableNext: boolean;\n}\n\ntype Way = 'left' | 'rigth';\n\nexport class Carousel extends Component<Props, State> {\n  ids = new Array<string>(this.props.images.length)\n    .fill('')\n    .map(el => el + uuidv4());\n\n  state: State = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    isInfinite: false,\n    marginLeft: 0,\n    isDisablePrev: true,\n    isDisableNext: false,\n  };\n\n  moveTo = (way: Way) => {\n    const {\n      step,\n      itemWidth,\n      frameSize,\n      isInfinite,\n    } = this.state;\n\n    const minMarginLeft = -itemWidth * (this.props.images.length - frameSize);\n\n    this.setState(prevState => {\n      let marginLeft = way === 'left'\n        ? prevState.marginLeft + itemWidth * step\n        : prevState.marginLeft - itemWidth * step;\n\n      if (prevState.marginLeft === 0 && isInfinite && way === 'left') {\n        marginLeft = minMarginLeft;\n      } else if (marginLeft > 0) {\n        marginLeft = 0;\n      } else if (prevState.marginLeft === minMarginLeft && isInfinite\n        && way === 'rigth') {\n        marginLeft = 0;\n      } else if (marginLeft < minMarginLeft) {\n        marginLeft = minMarginLeft;\n      }\n\n      return ({\n        marginLeft,\n        isDisablePrev: marginLeft === 0,\n        isDisableNext: marginLeft === minMarginLeft,\n      });\n    });\n  };\n\n  render() {\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      isInfinite,\n      marginLeft,\n      isDisablePrev,\n      isDisableNext,\n    } = this.state;\n    const { images } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n        }}\n      >\n        <label className=\"Carousel__label\">\n          Step:\n          <input\n            className=\"Carousel__input\"\n            type=\"number\"\n            value={step}\n            min=\"1\"\n            max={frameSize}\n            step=\"1\"\n            onChange={(event) => (\n              this.setState({ step: +event.target.value })\n            )}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Frame size:\n          <input\n            className=\"Carousel__input\"\n            type=\"number\"\n            value={frameSize}\n            min=\"3\"\n            max={1300 / itemWidth}\n            step=\"1\"\n            onChange={(event) => (\n              this.setState(\n                { frameSize: +event.target.value, marginLeft: 0 },\n              )\n            )}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          item Width:\n          <input\n            className=\"Carousel__input\"\n            type=\"number\"\n            value={itemWidth}\n            min=\"130\"\n            max={1300 / frameSize}\n            step=\"10\"\n            onChange={(event) => (\n              this.setState({ itemWidth: +event.target.value, marginLeft: 0 })\n            )}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Animation duration:\n          <input\n            className=\"Carousel__input\"\n            type=\"number\"\n            value={animationDuration}\n            min=\"300\"\n            max=\"2000\"\n            step=\"100\"\n            onChange={(event) => (\n              this.setState({ animationDuration: +event.target.value })\n            )}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Infinite carousel:\n          <input\n            className=\"Carousel__input\"\n            type=\"checkbox\"\n            checked={isInfinite}\n            onChange={(event) => (\n              this.setState({ isInfinite: event.target.checked })\n            )}\n          />\n        </label>\n\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            marginLeft: `${marginLeft}px`,\n            transition: `margin ${animationDuration}ms linear`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={this.ids[index]}>\n              <img src={image} width={`${itemWidth}px`} alt={`${index}`} />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            disabled={isInfinite ? false : isDisablePrev}\n            onClick={() => this.moveTo('left')}\n          >\n            Prev\n          </button>\n\n          <button\n            data-cy=\"next\"\n            className=\"Carousel__button\"\n            type=\"button\"\n            disabled={isInfinite ? false : isDisableNext}\n            onClick={() => this.moveTo('rigth')}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\" className='App__titile'>Carousel with {images.length} images</h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}